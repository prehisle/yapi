# 生产环境示例：在网关前置的 Nginx 中同步账户 API 的 CORS 配置。
# - 将 `api.example.com` / `admin.example.com` 替换为实际域名；
# - `map` 指定允许访问管理端的前端来源，保持与 `ADMIN_ALLOWED_ORIGINS` 一致；
# - 若需要允许多个来源，可继续在 map 中添加规则。

map $http_origin $admin_cors_origin {
  default "";
  "~^https://admin\.example\.com$" $http_origin;
  "~^https://ops\.example\.com$" $http_origin;
}

server {
  listen 443 ssl http2;
  server_name api.example.com;

  # 证书配置略，需要替换为真实证书路径。
  ssl_certificate     /etc/nginx/ssl/api.example.com/fullchain.pem;
  ssl_certificate_key /etc/nginx/ssl/api.example.com/privkey.pem;

  # 账户 / 管理端 API 代理至后方 Gateway。
  location /admin/ {
    proxy_pass http://gateway:8080/admin/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Request-ID $request_id;

    if ($admin_cors_origin != "") {
      add_header Access-Control-Allow-Origin $admin_cors_origin always;
      add_header Access-Control-Allow-Credentials "true" always;
      add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
      add_header Access-Control-Allow-Methods "GET,POST,PUT,DELETE,OPTIONS" always;
      add_header Access-Control-Expose-Headers "X-Request-ID" always;
      add_header Access-Control-Max-Age 600 always;
      add_header Vary "Origin" always;
    }

    if ($request_method = OPTIONS) {
      add_header Content-Length 0;
      add_header Content-Type text/plain;
      return 204;
    }
  }
}
