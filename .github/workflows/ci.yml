name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.3'
          cache: true

      - name: Prepare runtime environment
        run: |
          cat <<'EOF' > .env.local
          GATEWAY_PORT=8080
          UPSTREAM_BASE_URL=https://api.openai.com
          DATABASE_DSN=postgres://yapi:yapi@localhost:9109/yapi?sslmode=disable
          REDIS_ADDR=localhost:9108
          REDIS_CHANNEL=rules:sync
          ADMIN_USERNAME=admin
          ADMIN_PASSWORD=admin123
          ADMIN_TOKEN_SECRET=ci_playwright_secret
          ADMIN_TOKEN_TTL=30m
          EOF

      - name: Download modules
        run: go mod download

      - name: Go test
        run: go test ./...

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60.1
          args: ./...

      - name: Gateway verify script
        run: make verify
        env:
          START_COMPOSE: "true"
          GATEWAY_URL: http://localhost:8080

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/admin/package-lock.json

      - name: Install frontend dependencies
        working-directory: web/admin
        run: npm ci

      - name: Install Playwright browsers
        working-directory: web/admin
        run: npx playwright install --with-deps chromium

      - name: Build admin bundle
        working-directory: web/admin
        run: npm run build

      - name: End-to-end tests
        working-directory: web/admin
        env:
          PLAYWRIGHT_API_BASE_URL: http://localhost:8080
        run: |
          set -euo pipefail
          docker compose -f ../../deploy/docker-compose.yml up -d
          cleanup() {
            docker compose -f ../../deploy/docker-compose.yml down
          }
          trap cleanup EXIT
          npm run test:e2e
